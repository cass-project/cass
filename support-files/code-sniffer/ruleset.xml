<?xml version="1.0"?>
<ruleset name="Cass">

    <rule ref="Squiz">
        <!-- Проверка комментариев -->
        <exclude name="Squiz.Commenting"/>

        <exclude name="Generic.Commenting.DocComment"/>                                 <!-- Ненужные нам стандарты комментариев -->

        <exclude name="Squiz.Operators.ComparisonOperatorUsage.NotAllowed"/>            <!-- Запрет на использование ==  и != -->
        <exclude name="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue"/>          <!-- Запрет на if(func($var)) только if(true===func($var)) --> 

        <exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose"/> <!-- Ждёт одну пустую строку перед закрытием функции -->
        <exclude name="Squiz.WhiteSpace.ObjectOperatorSpacing.Before"/>                 <!-- Запрет на пробелы перед оператором "->" -->
        <exclude name="Squiz.Objects.ObjectInstantiation.NotAssigned"/>                 <!-- $var = (new Object())->method() highlight this -->
        <exclude name="Squiz.Files.FileExtension"/>                                     <!-- Запрет на расширение файла php если это класс и на расширение файла inc если это не класс. -->

        <!-- Запрет на объявление приватных переменных и функций без префикса "__" -->
        <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/> 
        <exclude name="Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>

        <exclude name="Squiz.PHP.DisallowInlineIf.Found"/>                              <!-- Запрет на $foo ?? $bar ?? $baz -->
        <exclude name="Squiz.PHP.DisallowBooleanStatement.Found"/>                      <!-- Запрет на bool вне if/while и т.п типа return $foo > $bar -->
        
        <exclude name="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket"/>   <!-- Запрет переноса точки с зарятой после функции -->
        <exclude name="Squiz.WhiteSpace.SemicolonSpacing.Incorrect"/>                   <!-- Запрет переноса точки с зарятой после функции -->
        <!--exclude name="Squiz.WhiteSpace.FunctionSpacing.After"/-->                   <!-- Запрет на отсутствие новой строки после функции -->
        <exclude name="Squiz.ControlStructures.SwitchDeclaration.MissingDefault"/>      <!-- Обязательное объявление default в switch -->
        <exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"/>  <!-- Вложенные функции на новых строках -->

        <!-- Отступ вложенных функций -->
        <exclude name="PEAR.Functions.FunctionCallSignature.Indent"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.MultipleArguments"/>
        <exclude name="PSR2.Files.EndFileNewline.NoneFound"/>                           <!-- Последняя строка файла должна быть пустая -->

        <exclude name="Squiz.ControlStructures.SwitchDeclaration"/>
        <exclude name="Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore"/>
        <exclude name="Generic.Files.LineEndings.InvalidEOLChar"/>                      <!-- LF / CRLF -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"/>
        <exclude name="Squiz.WhiteSpace.FunctionSpacing.Before"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine"/>

    </rule>


    <!-- How many spaces should surround the equals signs. -->
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" type="integer" value="1"/>
        </properties>
    </rule>
    
    <!-- The number of spaces before and after a string concat. -->
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" type="integer" value="1"/>
        </properties>
    </rule>

    <!-- The number of blank lines between functions. -->
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
            <property name="spacing" type="integer" value="1"/>
        </properties>
    </rule>

    <!-- Lines can be 120 chars long, but never show errors -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="200"/>
            <property name="absoluteLineLimit" value="200"/>
        </properties>
    </rule>    
</ruleset>
